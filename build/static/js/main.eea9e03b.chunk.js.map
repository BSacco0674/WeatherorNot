{"version":3,"sources":["components/NavBar/NavBar.jsx","services/tokenService.js","services/userService.js","pages/LoginPage/LoginPage.jsx","components/SignupForm/SignupForm.jsx","pages/SignupPage/SignupPage.jsx","services/api-calls.js","pages/CityListPage/CityListPage.jsx","components/InputForm/InputForm.jsx","services/utils.js","components/WeatherCard/WeatherCard.jsx","pages/SearchPage/SearchPage.jsx","pages/CityDetailsPage/CityDetailsPage.jsx","components/Logo/Logo.jsx","pages/App/App.js","serviceWorker.js","index.js"],"names":["NavBar","user","handleLogout","nav","className","href","id","name","onClick","getToken","token","localStorage","getItem","JSON","parse","atob","split","exp","Date","now","removeItem","setToken","setItem","getUserFromToken","removeToken","signup","fetch","BASE_URL","method","headers","Headers","body","stringify","then","res","ok","json","Error","tokenService","getUser","logout","login","creds","LoginPage","state","email","pw","handleChange","e","setState","target","value","handleSubmit","a","preventDefault","userService","props","handleSignupOrLogin","history","push","alert","autocomplete","onSubmit","this","type","onChange","htmlFor","class","to","Component","SignupForm","password","passwordConf","updateMessage","message","disabled","isFormInvalid","SignupPage","msg","getWeatherDataFromBackEnd","formData","console","log","mode","addCity","deleteCity","cityId","CityListPage","cities","map","city","key","_id","pathname","InputForm","invalidForm","country","formRef","React","createRef","handleGetWeatherData","current","checkValidity","ref","required","getWindDirection","degrees","getTimeFromTimestamp","t","dt","hr","getHours","m","getMinutes","s","getSeconds","substr","WeatherCard","weatherData","sys","src","weather","icon","alt","main","temp","feels_like","humidity","visibility","toFixed","wind","speed","gust","windDirection","clouds","all","sunrise","sunset","SearchPage","deg","handleAddCity","cityObj","base","CityDetailsPage","location","handleDeleteCity","match","params","Logo","App","exact","path","render","Boolean","window","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.eea9e03b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst NavBar = ({ user, handleLogout }) => {\r\n    let nav = user ?\r\n    <>\r\n        <nav>\r\n            <div className=\"nav-wrapper\">\r\n                <a href=\"#!\" className=\"brand-logo\"><i className=\"material-icons\">cloud</i>Weather or Not</a>\r\n                <ul id=\"nav-mobile\" className=\"right\">\r\n\r\n                    <li><a href=\"/search\" className=\"nav-link\"><i className=\"material-icons left\">search</i>Search</a></li>\r\n                    <li><a href=\"/cities\" className=\"nav-link\"><i className=\"material-icons left\">location_city</i>My Cities</a></li>\r\n                    <li><a href=\" \" className=\"nav-link\"><i className=\"material-icons left\">person</i>Welcome, {user.name}</a></li>\r\n                    <li><a href=\" \" className=\"nav-link\" onClick={handleLogout}><i className=\"material-icons left\">power_settings_new\r\n</i>Log Out</a></li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    </>\r\n    :\r\n    <>\r\n        <nav>\r\n            <div className=\"nav-wrapper\">\r\n                <ul id=\"nav-mobile\" className=\"right\">\r\n                    <li><a href=\"/login\" className=\"nav-link\">Log In</a></li>\r\n                    <li><a href=\"/signup\" className=\"nav-link\">Sign Up</a></li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    </>\r\n\r\n    return (\r\n    <>\r\n        {nav}\r\n    </>\r\n    )\r\n}\r\n\r\nexport default NavBar;","function setToken(token) {\r\n    if (token) {\r\n      localStorage.setItem('token', token);\r\n    } else {\r\n      localStorage.removeItem('token');\r\n    } \r\n  }\r\n  \r\nfunction getUserFromToken () {\r\n  const token = getToken();\r\n  return token ? JSON.parse(atob(token.split('.')[1])).user : null;\r\n}\r\n\r\nfunction getToken() {\r\n  let token = localStorage.getItem('token');\r\n  if (token) {\r\n    // Check if expired, remove if it is\r\n    const payload = JSON.parse(atob(token.split('.')[1]));\r\n    // JWT's exp is expressed in seconds, not milliseconds, so convert\r\n    if (payload.exp < Date.now() / 1000) {\r\n      localStorage.removeItem('token');\r\n      token = null;\r\n    }\r\n  }\r\n  return token;\r\n}\r\n\r\nfunction removeToken() {\r\n    localStorage.removeItem('token');\r\n}\r\n\r\nexport default {\r\n    setToken,\r\n    getToken,\r\n    getUserFromToken,\r\n    removeToken,\r\n  };","import tokenService from '../services/tokenService';\r\nconst BASE_URL = '/api/users/';\r\n\r\nfunction signup(user) {\r\n  return fetch(BASE_URL + 'signup', {\r\n    method: 'POST',\r\n    headers: new Headers({'Content-Type': 'application/json'}),\r\n    body: JSON.stringify(user)\r\n  })\r\n  .then(res => {\r\n    if (res.ok) return res.json();\r\n    throw new Error('Email already taken!');\r\n  })\r\n  // Parameter destructuring!\r\n  .then(({ token }) => {\r\n    tokenService.setToken(token);\r\n  });\r\n  // the above could have been written as\r\n  //.then((token) => token.token);\r\n}\r\n\r\nfunction getUser() {\r\n  return tokenService.getUserFromToken();\r\n}\r\n\r\nfunction logout() {\r\n  tokenService.removeToken();\r\n}\r\n\r\nfunction login(creds) {\r\n  return fetch(BASE_URL + 'login', {\r\n    method: 'POST',\r\n    headers: new Headers({'Content-Type': 'application/json'}),\r\n    body: JSON.stringify(creds)\r\n  })\r\n  .then(res => {\r\n    // Valid login if we have a status of 2xx (res.ok)\r\n    if (res.ok) return res.json();\r\n    throw new Error('Bad Credentials!');\r\n  })\r\n  .then(({token}) => tokenService.setToken(token));\r\n}\r\n\r\nexport default {\r\n  signup,\r\n  getUser,\r\n  logout,\r\n  login\r\n};","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './LoginPage.css';\r\nimport userService from '../../services/userService';\r\n\r\nclass LoginPage extends Component {\r\n  \r\n  state = {\r\n    email: '',\r\n    pw: ''\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      // Using ES2015 Computed Property Names\r\n      [e.target.name]: e.target.value\r\n    });\r\n  }\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await userService.login(this.state);\r\n      // Let <App> know a user has signed up!\r\n      this.props.handleSignupOrLogin();\r\n      this.props.history.push('/');\r\n    } catch (err) {\r\n      // Use a modal or toast in your apps instead of alert\r\n      alert('Invalid Credentials!');\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"LoginPage\">\r\n        <h3>Log In</h3>\r\n        <form className=\"col s12\" autocomplete=\"off\" onSubmit={this.handleSubmit} >\r\n          <div className=\"row\">\r\n            <div className=\"input-field col s12\">\r\n              <input type=\"text\" autocomplete=\"off\" id=\"email\" className=\"active\" value={this.state.email} name=\"email\" onChange={this.handleChange} />\r\n              <label htmlFor=\"email\">Email</label>\r\n\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"input-field col s12\">\r\n              <input type=\"password\" autocomplete=\"off\" className=\"active\" id=\"password\" value={this.state.pw} name=\"pw\" onChange={this.handleChange} />\r\n              <label htmlFor=\"password\">Password</label>\r\n\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col s12\">\r\n              <button className=\"btn green\">Log In<i class=\"material-icons right\">arrow_forward</i></button>&nbsp;&nbsp;&nbsp;\r\n              <Link className=\"btn red\" to='/'>Cancel<i class=\"material-icons right\">cancel</i></Link>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginPage;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport userService from '../../services/userService';\r\n\r\nclass SignupForm extends Component {\r\n\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    passwordConf: ''\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.props.updateMessage('');\r\n    this.setState({\r\n      // Using ES2015 Computed Property Names\r\n      [e.target.name]: e.target.value\r\n    });\r\n  }\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await userService.signup(this.state);\r\n      this.props.handleSignupOrLogin();\r\n      this.props.history.push('/');\r\n    } catch (err) {\r\n      // Invalid user data (probably duplicate email)\r\n      this.props.updateMessage(err.message);\r\n    }\r\n  }\r\n\r\n  isFormInvalid() {\r\n    return !(this.state.name && this.state.email && this.state.password === this.state.passwordConf);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h3>Sign Up</h3>\r\n        <form className=\"col s12\" autocomplete=\"off\" onSubmit={this.handleSubmit} >\r\n          <div className=\"row\">\r\n            <div className=\"input-field col s12\">\r\n              <input type=\"text\" autocomplete=\"off\" className=\"active\" id=\"name\" value={this.state.name} name=\"name\" onChange={this.handleChange} />\r\n              <label htmlFor=\"name\">Name</label>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"input-field col s12\">\r\n              <input type=\"text\" autocomplete=\"off\" className=\"active\" id=\"email\" value={this.state.email} name=\"email\" onChange={this.handleChange} />\r\n              <label htmlFor=\"email\">Email</label>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"input-field col s12\">\r\n              <input type=\"password\" autocomplete=\"off\" className=\"active\" id=\"password\" value={this.state.password} name=\"password\" onChange={this.handleChange} />\r\n              <label htmlFor=\"password\">Password</label>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"input-field col s12\">\r\n              <input type=\"password\" autocomplete=\"off\" className=\"active\" id=\"confirm\" value={this.state.passwordConf} name=\"passwordConf\" onChange={this.handleChange} />\r\n              <label htmlFor=\"confirm\">Confirm Password</label>\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <div className=\"col-sm-12 text-center\">\r\n              <button className=\"btn green\" disabled={this.isFormInvalid()}>Sign Up<i class=\"material-icons right\">person_add</i></button>&nbsp;&nbsp;\r\n              <Link className=\"btn red\" to='/'>Cancel<i class=\"material-icons right\">cancel</i></Link>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignupForm;\r\n","import React, { Component } from 'react';\r\nimport SignupForm from '../../components/SignupForm/SignupForm';\r\nimport './SignupPage.css';\r\n\r\nclass SignupPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {message: ''}\r\n  }\r\n\r\n  updateMessage = (msg) => {\r\n    this.setState({message: msg});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='SignupPage'>\r\n        <SignupForm {...this.props} updateMessage={this.updateMessage} />\r\n        <p>{this.state.message}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignupPage;","import tokenService from './tokenService';\r\n\r\n\r\n\r\nexport function getWeatherDataFromBackEnd(formData){\r\n    console.log(formData)\r\n    return fetch('/api/weather', {\r\n        method: \"POST\",\r\n        headers: {'content-type': 'application/json', 'Authorization': 'Bearer ' + tokenService.getToken()},\r\n        body: JSON.stringify(formData)\r\n    }, {mode: \"cors\"})\r\n    .then(res => res.json())\r\n}\r\n\r\nexport function getCities(){\r\n    return fetch('/api/cities', {\r\n        headers: {'Authorization': 'Bearer ' + tokenService.getToken()}\r\n    }, {mode: \"cors\"})\r\n    .then(res => res.json())\r\n}\r\n\r\nexport function addCity(formData){\r\n    return fetch('/api/cities', {\r\n        method: \"POST\",\r\n        headers: {'content-type': 'application/json', 'Authorization': 'Bearer ' + tokenService.getToken()},\r\n        body: JSON.stringify(formData)\r\n    }, {mode: \"cors\"})\r\n    .then(res => res.json())\r\n}\r\n\r\nexport function deleteCity(cityId){\r\n    return fetch(`/api/cities/${cityId}`, {\r\n        method: \"DELETE\",\r\n        headers: {'content-type': 'application/json', 'Authorization': 'Bearer ' + tokenService.getToken()}\r\n    }, {mode: \"cors\"})\r\n    .then(res => res.json())\r\n}","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport * as weatherAPI from '../../services/api-calls';\r\n\r\nclass CityListPage extends Component {\r\n    state = {\r\n        cities: [],\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const cities = await weatherAPI.getCities();\r\n        this.setState({cities})\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <>  \r\n            \r\n  <div class=\"row\">\r\n        {this.state.cities.map((city) => \r\n    <div key={city._id} class=\"col s6 m4\">\r\n                     <Link\r\n                        to={{\r\n                            pathname: `/city/${city._id}`,\r\n                            state: {city}\r\n                        }}\r\n                    ><div  class=\"card blue-grey darken-1\">\r\n        <div class=\"card-content white-text\">\r\n          <span class=\"card-title\">{city.name} </span>\r\n          \r\n        </div>\r\n                    \r\n      </div>\r\n    </Link><br></br>\r\n    </div>\r\n)}\r\n    </div>\r\n \r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CityListPage;","import React, { Component } from 'react';\r\n\r\nclass InputForm extends Component {\r\n    state = {\r\n        invalidForm: true,\r\n        formData: {\r\n            name: '',\r\n            country: ''\r\n        }\r\n\r\n    };\r\n\r\n    formRef = React.createRef();\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.handleGetWeatherData(this.state.formData);\r\n      };\r\n\r\n    handleChange = e => {\r\n        const formData = {...this.state.formData, [e.target.name]: e.target.value};\r\n        this.setState({\r\n            formData,\r\n            invalidForm: !this.formRef.current.checkValidity()\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"form-container\">\r\n                <form className=\"col \" ref={this.formRef} onSubmit={this.handleSubmit} >\r\n                    <div className=\"row form-row\">\r\n                        <div className=\"input-field col\">\r\n                            <input name=\"name\" id=\"name\" type=\"text\" className=\"active\" value={this.state.formData.city} onChange={this.handleChange} required />\r\n                            <label htmlFor=\"name\">City</label>\r\n                        </div>\r\n                        <div className=\"input-field col\">\r\n                            <input name=\"country\" id=\"country\" type=\"text\" className=\"active\" value={this.state.formData.country} onChange={this.handleChange} required />\r\n                            <label htmlFor=\"country\">Country</label>\r\n                        </div><br></br>\r\n                \r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"btn green\"\r\n                            disabled={this.state.invalidForm}\r\n                        ><i className=\"material-icons left\">search</i>\r\n                            Get Weather\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InputForm;","\r\n\r\nexport function getWindDirection(degrees){\r\n    if((degrees >= 348.75 && degrees <= 360) || (degrees >=0 && degrees < 11.25)){return \"N\"}\r\n    if(degrees >= 11.25 && degrees < 33.75){return \"NNE\"}\r\n    if(degrees >= 33.75 && degrees < 56.25){return \"NE\"}\r\n    if(degrees >= 56.25 && degrees < 78.75){return \"ENE\"}\r\n    if(degrees >= 78.75 && degrees < 101.25){return \"E\"}\r\n    if(degrees >= 101.25 && degrees < 123.75){return \"ESE\"}\r\n    if(degrees >= 123.75 && degrees < 146.25){return \"SE\"}\r\n    if(degrees >= 146.25 && degrees < 168.75){return \"SSE\"}\r\n    if(degrees >= 168.75 && degrees < 191.25){return \"S\"}\r\n    if(degrees >= 191.25 && degrees < 213.75){return \"SSW\"}\r\n    if(degrees >= 213.75 && degrees < 236.25){return \"SW\"}\r\n    if(degrees >= 236.25 && degrees < 258.75){return \"WSW\"}\r\n    if(degrees >= 258.75 && degrees < 281.25){return \"W\"}\r\n    if(degrees >= 281.25 && degrees < 303.75){return \"WNW\"}\r\n    if(degrees >= 303.75 && degrees < 326.25){return \"NW\"}\r\n    if(degrees >= 326.25 && degrees < 348.75){return \"NNW\"}\r\n}\r\n\r\nexport function getTimeFromTimestamp(t){\r\n    var dt = new Date(t*1000);\r\n    var hr = dt.getHours();\r\n    var m = \"0\" + dt.getMinutes();\r\n    var s = \"0\" + dt.getSeconds();\r\n    return hr+ ':' + m.substr(-2) + ':' + s.substr(-2);  \r\n}","import React from \"react\";\r\n\r\nconst WeatherCard = (props) => {\r\n  console.log(props.weatherData);\r\n  return (\r\n    <>\r\n      {props.weatherData.name ? (\r\n        <>\r\n          {props.weatherData.message ? (\r\n            <h4>{props.weatherData.message}</h4>\r\n          ) : (\r\n            <>\r\n              <div className=\"col s12 m7\">\r\n                <h4 className=\"header\">\r\n                  Current Weather for {props.weatherData.name},{\" \"}\r\n                  {props.weatherData.sys.country}\r\n                </h4>\r\n                <div className=\"card horizontal\">\r\n                  <div className=\"card-image\">\r\n                    <img\r\n                      src={`/images/${props.weatherData.weather[0].icon}.gif`}\r\n                      alt=\"\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"card-stacked\">\r\n                    <div className=\"card-content\">\r\n                      <p>Conditions: {props.weatherData.weather[0].main} </p>\r\n                      <p>Temperature: {props.weatherData.main.temp} &deg;F </p>\r\n                      <p>\r\n                        Feels Like: {props.weatherData.main.feels_like} &deg;F{\" \"}\r\n                      </p>\r\n                      <p>Humidity: {props.weatherData.main.humidity}% </p>\r\n                      <p>\r\n                        Visibility:{\" \"}\r\n                        {(props.weatherData.visibility / 1609).toFixed(1)} miles\r\n                      </p>\r\n                      <p>Wind: {props.weatherData.wind.speed.toFixed(1)} mph</p>\r\n                      <p>{`Dewpoint: ${(\r\n                        ((props.weatherData.main.temp - 32) / 1.8 -\r\n                          (100 - props.weatherData.main.humidity) / 5) *\r\n                          1.8 +\r\n                        32\r\n                      ).toFixed(2)}°F`}</p>\r\n                      <p>\r\n                        Wind Gusts:{\" \"}\r\n                        {props.weatherData.wind.gust\r\n                          ? `${props.weatherData.wind.gust} mph`\r\n                          : \"0 mph\"}\r\n                      </p>\r\n                      <p>Wind Direction: {props.windDirection}</p>\r\n                      <p>Cloud Cover: {props.weatherData.clouds.all} %</p>\r\n                      <p>Sunrise: {props.sunrise} AM</p>\r\n                      <p>Sunset: {props.sunset} PM</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WeatherCard;\r\n","import React, { Component } from 'react';\r\nimport InputForm from '../../components/InputForm/InputForm';\r\nimport { getTimeFromTimestamp, getWindDirection } from '../../services/utils';\r\nimport { getWeatherDataFromBackEnd } from '../../services/api-calls';\r\nimport WeatherCard from '../../components/WeatherCard/WeatherCard';\r\nimport { addCity } from '../../services/api-calls';\r\n\r\nclass SearchPage extends Component{\r\n    state = {\r\n        weatherData: [],\r\n        windDirection: '',\r\n        sunrise: '',\r\n        sunset: ''\r\n      }\r\n    \r\n      handleGetWeatherData = async formData => {\r\n        const weatherData = await getWeatherDataFromBackEnd(formData);\r\n        const windDirection = await getWindDirection(weatherData.wind.deg);\r\n        const sunrise = await getTimeFromTimestamp(weatherData.sys.sunrise);\r\n        const sunset = await getTimeFromTimestamp(weatherData.sys.sunset);\r\n        this.props.history.push('/search');\r\n        this.setState({weatherData, windDirection, sunrise, sunset})\r\n      }\r\n\r\n      handleAddCity = async () => {\r\n          const cityObj = {};\r\n          cityObj[\"name\"]=this.state.weatherData.name;\r\n          cityObj[\"country\"]=this.state.weatherData.sys.country;\r\n          await addCity(cityObj);\r\n          this.props.history.push('/cities')\r\n      }\r\n\r\n      render(){\r\n          return(\r\n              <>\r\n                <InputForm \r\n                    handleGetWeatherData={this.handleGetWeatherData}\r\n                />\r\n                {this.state.weatherData.base ?\r\n                <>\r\n                    <WeatherCard \r\n                        weatherData={this.state.weatherData}\r\n                        windDirection={this.state.windDirection}\r\n                        sunrise={this.state.sunrise}\r\n                        sunset={this.state.sunset}\r\n                        handleAddCity={this.handleAddCity}\r\n                    />\r\n                    <button className=\"btn green\" onClick={() => this.handleAddCity()}>\r\n                       Save this Town!\r\n                    </button>\r\n                    \r\n                </>    \r\n\r\n                    :\r\n                    <>\r\n                    </>\r\n                }\r\n              </>\r\n          )\r\n      }\r\n}\r\n\r\nexport default SearchPage;","import React, { Component } from 'react';\r\nimport { getWeatherDataFromBackEnd, deleteCity } from '../../services/api-calls';\r\nimport WeatherCard from '../../components/WeatherCard/WeatherCard';\r\nimport { getTimeFromTimestamp, getWindDirection } from '../../services/utils';\r\n\r\nclass CityDetailsPage extends Component{\r\n    state = {\r\n        name: this.props.location.state.city.name,\r\n        country: this.props.location.state.city.country,\r\n        weatherData: [],\r\n        windDirection: '',\r\n        sunrise: '',\r\n        sunset: ''\r\n    }\r\n    \r\n    async componentDidMount(){\r\n        const weatherData = await getWeatherDataFromBackEnd(this.state)\r\n        const windDirection = await getWindDirection(weatherData.wind.deg);\r\n        const sunrise = await getTimeFromTimestamp(weatherData.sys.sunrise);\r\n        const sunset = await getTimeFromTimestamp(weatherData.sys.sunset);\r\n        this.setState({weatherData, windDirection, sunset, sunrise})\r\n    }\r\n\r\n    handleDeleteCity = async cityId => {\r\n        await deleteCity(cityId)\r\n        this.props.history.push('/cities')\r\n    }\r\n    \r\n\r\n    render() {\r\n        return(\r\n            <>\r\n            {this.state.weatherData.base ?\r\n                <>\r\n                    <WeatherCard \r\n                        weatherData={this.state.weatherData}\r\n                        windDirection={this.state.windDirection}\r\n                        sunrise={this.state.sunrise}\r\n                        sunset={this.state.sunset}\r\n                        handleAddCity={this.handleAddCity}\r\n                    />\r\n                    <button className=\"btn red\" onClick={() => this.handleDeleteCity(this.props.match.params.id)}>\r\n                        Remove From Favorites\r\n                    </button>\r\n                </>    \r\n\r\n                    :\r\n                    <>\r\n                    </>\r\n                }\r\n              \r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CityDetailsPage;","import React from 'react'\n\nconst Logo = () => {\n    return ( <div className=\"logo\">\n    <img src=\"/images/logo.gif\"></img>\n  </div> );\n}\n \nexport default Logo;\n\n\n","import React, { Component } from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport NavBar from \"../../components/NavBar/NavBar\";\r\nimport LoginPage from \"../LoginPage/LoginPage\";\r\nimport SignupPage from \"../SignupPage/SignupPage\";\r\nimport userService from \"../../services/userService\";\r\nimport CityListPage from \"../CityListPage/CityListPage\";\r\nimport SearchPage from \"../SearchPage/SearchPage\";\r\nimport CityDetailsPage from \"../CityDetailsPage/CityDetailsPage\";\r\nimport Logo from \"../../components/Logo/Logo\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    user: userService.getUser(),\r\n  };\r\n\r\n  handleLogout = () => {\r\n    userService.logout();\r\n    this.setState({ user: null });\r\n  };\r\n\r\n  handleSignupOrLogin = () => {\r\n    this.setState({ user: userService.getUser() });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <NavBar user={this.state.user} handleLogout={this.handleLogout} />\r\n        {this.state.user ? (\r\n          \"\"\r\n        ) : (\r\n          <Route exact path=\"/\" render={() => <Logo />} />\r\n        )}\r\n        <Route\r\n          exact\r\n          path=\"/signup\"\r\n          render={({ history }) => (\r\n            <SignupPage\r\n              history={history}\r\n              handleSignupOrLogin={this.handleSignupOrLogin}\r\n            />\r\n          )}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/login\"\r\n          render={({ history }) => (\r\n            <LoginPage\r\n              history={history}\r\n              handleSignupOrLogin={this.handleSignupOrLogin}\r\n            />\r\n          )}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/cities\"\r\n          render={({ history }) => (\r\n            <CityListPage history={history} user={this.state.user} />\r\n          )}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/search\"\r\n          render={({ history }) => (\r\n            <SearchPage history={history} user={this.state.user} />\r\n          )}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/city/:id\"\r\n          render={({ history, location, match }) => (\r\n            <CityDetailsPage\r\n              match={match}\r\n              history={history}\r\n              user={this.state.user}\r\n              location={location}\r\n            />\r\n          )}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './pages/App/App';\r\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <React.StrictMode>\r\n      <Route render={({history}) => <App history={history} />} />\r\n    </React.StrictMode>\r\n  </Router>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}